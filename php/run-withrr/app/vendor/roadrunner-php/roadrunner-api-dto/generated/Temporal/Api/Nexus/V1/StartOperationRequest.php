<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: temporal/api/nexus/v1/message.proto

namespace Temporal\Api\Nexus\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A request to start an operation.
 *
 * Generated from protobuf message <code>temporal.api.nexus.v1.StartOperationRequest</code>
 */
class StartOperationRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Type of operation to start.
     *
     * Generated from protobuf field <code>string operation = 1;</code>
     */
    protected $operation = '';
    /**
     * A request ID that can be used as an idempotentency key.
     *
     * Generated from protobuf field <code>string request_id = 2;</code>
     */
    protected $request_id = '';
    /**
     * Callback URL to call upon completion if the started operation is async.
     *
     * Generated from protobuf field <code>string callback = 3;</code>
     */
    protected $callback = '';
    /**
     * Full request body from the incoming HTTP request.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Payload payload = 4;</code>
     */
    protected $payload = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $operation
     *           Type of operation to start.
     *     @type string $request_id
     *           A request ID that can be used as an idempotentency key.
     *     @type string $callback
     *           Callback URL to call upon completion if the started operation is async.
     *     @type \Temporal\Api\Common\V1\Payload $payload
     *           Full request body from the incoming HTTP request.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Temporal\Api\Nexus\V1\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * Type of operation to start.
     *
     * Generated from protobuf field <code>string operation = 1;</code>
     * @return string
     */
    public function getOperation()
    {
        return $this->operation;
    }

    /**
     * Type of operation to start.
     *
     * Generated from protobuf field <code>string operation = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setOperation($var)
    {
        GPBUtil::checkString($var, True);
        $this->operation = $var;

        return $this;
    }

    /**
     * A request ID that can be used as an idempotentency key.
     *
     * Generated from protobuf field <code>string request_id = 2;</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * A request ID that can be used as an idempotentency key.
     *
     * Generated from protobuf field <code>string request_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Callback URL to call upon completion if the started operation is async.
     *
     * Generated from protobuf field <code>string callback = 3;</code>
     * @return string
     */
    public function getCallback()
    {
        return $this->callback;
    }

    /**
     * Callback URL to call upon completion if the started operation is async.
     *
     * Generated from protobuf field <code>string callback = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setCallback($var)
    {
        GPBUtil::checkString($var, True);
        $this->callback = $var;

        return $this;
    }

    /**
     * Full request body from the incoming HTTP request.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Payload payload = 4;</code>
     * @return \Temporal\Api\Common\V1\Payload|null
     */
    public function getPayload()
    {
        return $this->payload;
    }

    public function hasPayload()
    {
        return isset($this->payload);
    }

    public function clearPayload()
    {
        unset($this->payload);
    }

    /**
     * Full request body from the incoming HTTP request.
     *
     * Generated from protobuf field <code>.temporal.api.common.v1.Payload payload = 4;</code>
     * @param \Temporal\Api\Common\V1\Payload $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkMessage($var, \Temporal\Api\Common\V1\Payload::class);
        $this->payload = $var;

        return $this;
    }

}

